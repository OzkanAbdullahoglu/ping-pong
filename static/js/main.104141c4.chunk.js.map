{"version":3,"sources":["constants/index.js","constants/colors.js","components/Ball/Ball.js","components/Game/Game.js","components/Paddle/Paddle.js","App.js","reportWebVitals.js","index.js"],"names":["PADDLE_WIDTH","PADDLE_HEIGHT","RED","renderBall","context","radius","position","x","y","gradient","createLinearGradient","addColorStop","save","fillStyle","beginPath","arc","Math","PI","fill","restore","Game","canvasRef","useRef","reqRef","defaultScore","computerScore","playerScore","maxAngle","useState","score","setScore","restartGame","setRestartGame","animate","canvas","current","width","window","innerWidth","height","innerHeight","ctx","getContext","player","speed","computer","ball","vMax","vX","vY","freeze","round","Number","EPSILON","keys","ArrowUp","ArrowDown","Space","keyDown","event","code","keyUp","resetGame","getWinner","move","currSpeed","angle","cos","sin","document","addEventListener","draw","clearRect","rect","renderPaddleLeft","renderPaddleRight","font","textAlign","removeEventListener","fillText","requestAnimationFrame","useEffect","cancelAnimationFrame","className","ref","aria-label","aria-roledescription","type","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yPACaA,EAAe,GACfC,EAAgB,ICEhBC,EAAM,UCWJC,EAbI,SAACC,EAASC,EAAQC,GAAc,IACzCC,EAASD,EAATC,EAAGC,EAAMF,EAANE,EACLC,EAAWL,EAAQM,qBAAqB,EAAG,EAAG,IAAK,IAAK,GAAI,IAClED,EAASE,aAAa,EDAE,WCCxBF,EAASE,aAAa,EAAGT,GACzBE,EAAQQ,OACRR,EAAQS,UAAYJ,EACpBL,EAAQU,YACRV,EAAQW,IAAIR,EAAGC,EAAGH,EAAQ,EAAa,EAAVW,KAAKC,IAAQ,GAC1Cb,EAAQc,OACRd,EAAQe,WC2PKC,G,MA1PF,WACX,IAAMC,EAAYC,iBAAO,MACnBC,EAASD,iBAAO,MAChBE,EAAe,CACnBC,cAAe,EACfC,YAAa,GAKTC,EAAY,GAAK,IAAOX,KAAKC,GAVlB,EAWSW,mBAAS,eAAKJ,IAXvB,mBAWVK,EAXU,KAWHC,EAXG,OAYqBF,oBAAS,GAZ9B,mBAYVG,EAZU,KAYGC,EAZH,KAaXC,EAAU,WACd,IAAMC,EAASb,EAAUc,QACzBD,EAAOE,MAAQC,OAAOC,WAAa,EACnCJ,EAAOK,OAASF,OAAOG,YAAc,EACrC,IAAMC,EAAMP,EAAOQ,WAAW,MACxBC,EAAS,CACbpC,EAAG,EACHC,EAAG0B,EAAOK,OAAS,EACnBK,MHlCe,EGmCfR,MAAOpC,EACPuC,OAAQtC,GAEJ4C,EAAW,CACftC,EAAG2B,EAAOE,MAAQpC,EAClBQ,EAAG0B,EAAOK,OAAS,EACnBK,MHzCe,EG0CfR,MAAOpC,EACPuC,OAAQtC,GAEJ6C,EAAO,CACXvC,EAAG2B,EAAOE,MAAQ,EAClB5B,EAAG0B,EAAOK,OAAS,EACnBQ,KHhDe,EGiDfC,GHjDe,EGkDfC,IHlDe,EGmDfC,QAAQ,EACR7C,OAAQW,KAAKmC,MAA8C,KAAvCjB,EAAOK,OAAS,GAAKa,OAAOC,UAAkB,KAG9DC,EAAO,CACXC,SAAS,EACTC,WAAW,EACXC,OAAO,GAGHC,EAAU,SAACC,GACXA,EAAMC,QAAQN,IAChBA,EAAKK,EAAMC,OAAQ,IAGjBC,EAAQ,SAACF,GACTA,EAAMC,QAAQN,IAChBA,EAAKK,EAAMC,OAAQ,IAGjBE,EAAY,WAChBhB,EAAKvC,EAAI2B,EAAOE,MAAQ,EACxBU,EAAKtC,EAAI0B,EAAOK,OAAS,EACzBO,EAAKC,KH1EU,EG2EfD,EAAKE,GAAK,EACVF,EAAKG,GAAK,EACVH,EAAKI,QAAS,EACdP,EAAOpC,EAAI,EACXoC,EAAOnC,EAAI0B,EAAOK,OAAS,EAC3BM,EAAStC,EAAI2B,EAAOE,MAAQpC,EAC5B6C,EAASrC,EAAI0B,EAAOK,OAAS,GAEzBwB,EAAY,WAAO,IACfrC,EAA+BG,EAA/BH,YAAaD,EAAkBI,EAAlBJ,cACrB,OHjFgB,IGiFZC,EAA+B,SHjFnB,IGkFZD,GAAiC,YAejCuC,EAAO,WAVO,IAACC,EAuEnB,GA3DIX,EAAKG,OAASX,EAAKI,SAAWa,MAZfE,EH3FJ,EG4FfnB,EAAKI,QAAS,EACdJ,EAAKE,GAAKiB,EAAY,EACtBnB,EAAKG,IAAMgB,EAAY,GAanBX,EAAKC,SAAWZ,EAAOnC,EAAImC,EAAOJ,OAAS,EAC7CI,EAAOnC,GAAKmC,EAAOC,MAEnBU,EAAKE,WACLb,EAAOnC,EAAI0B,EAAOK,OAASI,EAAOJ,OAAS,IAE3CI,EAAOnC,GAAKmC,EAAOC,OAfrBE,EAAKtC,GAAKsC,EAAKG,GACfH,EAAKvC,GAAKuC,EAAKE,GAqBfH,EAASD,MHrHU,KGqHQE,EAAKtC,EAAIqC,EAASrC,GAEzCqC,EAASD,OH1HE,IG2HbC,EAASD,OH3HI,GG6HXC,EAASD,MH7HE,IG8HbC,EAASD,MH9HI,GGiIfC,EAASrC,GAAKqC,EAASD,MAEnBC,EAASrC,EAAIqC,EAASN,OAAS,IACjCM,EAASrC,EAAIqC,EAASN,OAAS,GAE7BM,EAASrC,EAAI0B,EAAOK,OAASM,EAASN,OAAS,IACjDM,EAASrC,EAAI0B,EAAOK,OAASM,EAASN,OAAS,GAG7CO,EAAKtC,EAAIsC,EAAKzC,OAAS,GAAK6B,EAAOK,SACrCO,EAAKG,KAAO,EACZH,EAAKtC,EAAI0B,EAAOK,OAASO,EAAKzC,OAAS,GAErCyC,EAAKtC,EAAIsC,EAAKzC,OAAS,GAAK,IAC9ByC,EAAKG,KAAO,EACZH,EAAKtC,EAAIsC,EAAKzC,OAAS,GAErByC,EAAKvC,EAAIuC,EAAKzC,OAAS,GAAK6B,EAAOE,QACrCU,EAAKE,KAAO,EACZF,EAAKvC,EAAI2B,EAAOE,MAAQU,EAAKzC,OAAS,EACtCyB,EAAS,2BAAKD,GAAN,IAAaH,YAAcG,EAAMH,aAAe,KACxDoC,KAEEhB,EAAKvC,EAAIuC,EAAKzC,OAAS,GAAK,IAC9ByC,EAAKE,KAAO,EACZF,EAAKvC,EAAIuC,EAAKzC,OAAS,EACvByB,EAAS,2BAAKD,GAAN,IAAaJ,cAAgBI,EAAMJ,eAAiB,KAC5DqC,KAOAhB,EAAKvC,EAAIuC,EAAKzC,OAAS,GAAKsC,EAAOpC,EAAIoC,EAAOP,OAC9CU,EAAKtC,GAAKmC,EAAOnC,EAAImC,EAAOJ,OAAS,GACrCO,EAAKtC,GAAKmC,EAAOnC,EAAImC,EAAOJ,OAAS,EACrC,CACA,IACM2B,GADapB,EAAKtC,EAAImC,EAAOnC,IAAMmC,EAAOJ,OAAS,GAC/BZ,EAC1BmB,EAAKE,GAAKF,EAAKC,KAAO/B,KAAKmD,IAAID,GAC/BpB,EAAKG,GAAKH,EAAKC,KAAO/B,KAAKoD,IAAIF,GAEjC,GACEpB,EAAKvC,EAAIuC,EAAKzC,OAAS,GAAK6B,EAAOE,MAAQO,EAAOP,OAClDU,EAAKtC,GAAKqC,EAASrC,EAAIqC,EAASN,OAAS,GACzCO,EAAKtC,GAAKqC,EAASrC,EAAIqC,EAASN,OAAS,EACzC,CACA,IACM2B,GADapB,EAAKtC,EAAIqC,EAASrC,IAAMqC,EAASN,OAAS,GACnCZ,EAC1BmB,EAAKE,IAAMF,EAAKC,KAAO/B,KAAKmD,IAAID,GAChCpB,EAAKG,GAAKH,EAAKC,KAAO/B,KAAKoD,IAAIF,KAsCnCG,SAASC,iBAAiB,UAAWZ,GACrCW,SAASC,iBAAiB,QAAST,GAnCtB,SAAPU,IACJ9B,EAAI+B,UAAU,EAAG,EAAGtC,EAAOE,MAAOF,EAAOK,QACzCyB,IACAvB,EAAI5B,UFzLY,UE0LhB4B,EAAIgC,KAAK,EAAG,EAAGvC,EAAOE,MAAOF,EAAOK,QACpCE,EAAIvB,OACJuB,EAAI3B,YCtLsB,SAACV,EAASE,GACxC,IAAMG,EAAWL,EAAQM,qBAAqB,EAAG,IAAK,IAAK,KAC3DD,EAASE,aAAa,EHTK,WGU3BF,EAASE,aAAa,EHXE,WGYxBP,EAAQQ,OACRR,EAAQS,UAAYJ,EACpBL,EAAQU,YACRV,EAAQqE,KACNnE,EAASC,EACTD,EAASE,EAAIP,GACbD,EACAC,GAEFG,EAAQc,OACRd,EAAQe,UDyKJuD,CAAiBjC,EAAKE,GCvKK,SAACvC,EAASE,GACzC,IAAMG,EAAWL,EAAQM,qBAAqB,IAAK,GAAI,IAAK,KAC5DD,EAASE,aAAa,EHXG,WGYzBF,EAASE,aAAa,EAAGT,GACzBE,EAAQQ,OACRR,EAAQS,UAAYJ,EACpBL,EAAQU,YACRV,EAAQqE,KACNnE,EAASC,EACTD,EAASE,EAAIP,GACbD,EACAC,GAEFG,EAAQc,OACRd,EAAQe,UD0JJwD,CAAkBlC,EAAKI,GACvB1C,EAAWsC,EAAKK,EAAKzC,OAAQ,CAAEE,EAAGuC,EAAKvC,EAAGC,EAAGsC,EAAKtC,GAAK0B,GAQvDO,EAAImC,KAAO,aACXnC,EAAIoC,UAAY,SACZd,MACFM,SAASS,oBAAoB,UAAWpB,GACxCW,SAASS,oBAAoB,QAASjB,GAClB,WAAhBE,MACFtB,EAAI5B,UFzMO,UE0MX4B,EAAIsC,SAAS,YAAa7C,EAAOE,MAAQ,EAAG,KAE1B,aAAhB2B,MACFtB,EAAI5B,UAAYX,EAChBuC,EAAIsC,SAAS,cAAe7C,EAAOE,MAAQ,EAAG,MAGlD4C,sBAAsBT,GAKxBA,IAQFU,qBAAU,WAER,OADA1D,EAAOY,QAAU6C,sBAAsB/C,GAChC,kBAAMiD,qBAAqB3D,EAAOY,YACxC,CAACJ,IA1Na,IA4NTL,EAA+BG,EAA/BH,YAAaD,EAAkBI,EAAlBJ,cAErB,OACE,qCACE,qCACE,uBAAM0D,UAAU,QAAhB,qBACWzD,EADX,gBACqCD,KAErC,uBAAM0D,UAAU,WAAhB,yCAEE,uBAFF,6BAMF,wBACEC,IAAK/D,EACLe,MAAOC,OAAOC,WAAa,EAC3BC,OAAQF,OAAOG,YAAc,EAC7B6C,aAAW,iBACXC,uBAAqB,oBHxPP,IG0Pf5D,GH1Pe,IG0PWD,EACzB,wBAAQ8D,KAAK,SAASJ,UAAU,SAASK,QAhCzB,WACpB1D,EAAS,eAAKN,IACdQ,GAAgBD,IA8BZ,wBAGE,UErPK0D,MAVf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,mCACE,cAAC,EAAD,SCKOO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASiC,eAAe,SAG1BZ,M","file":"static/js/main.104141c4.chunk.js","sourcesContent":["export const SPEED = 5;\r\nexport const PADDLE_WIDTH = 15;\r\nexport const PADDLE_HEIGHT = 100;\r\nexport const BOT_LEVEL = 0.08;\r\nexport const WINNER = 5;\r\n","export const ROYAL_BLUE = '#425af2';\r\nexport const TROPICAL_BLUE = '#B8C2F8';\r\nexport const SELAGO = '#F3F4FE';\r\nexport const ORANGE_RED = '#FF5656';\r\nexport const RED = '#d1222c';\r\nexport const MINT_GREEN = '#22D9A2';\r\nexport const GREEN = '#209d7f';\r\nexport const LIGHTER_GRAY = '#F9F9F9';\r\nexport const LIGHT_GRAY = '#D7D7D7';\r\nexport const MEDIUM_GRAY = '#C5C5C5';\r\nexport const DARK_GRAY = '#939393';\r\nexport const DARKER_GRAY = '#282828';\r\nexport const WHITE = '#ffffff';\r\nexport const OFF_WHITE = '#fbfbfd';\r\nexport const BLACK = '#000000';\r\nexport const CAVERN_PINK = '#E1BCBC';\r\n","import { RED, MINT_GREEN } from '../../constants/colors';\r\n\r\nconst renderBall = (context, radius, position) => {\r\n  const { x, y } = position;\r\n  const gradient = context.createLinearGradient(0, 0, 750, 200, 30, 30);\r\n  gradient.addColorStop(0, MINT_GREEN);\r\n  gradient.addColorStop(1, RED);\r\n  context.save();\r\n  context.fillStyle = gradient;\r\n  context.beginPath();\r\n  context.arc(x, y, radius, 0, Math.PI * 2, false);\r\n  context.fill();\r\n  context.restore();\r\n};\r\n\r\nexport default renderBall;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { renderPaddleRight, renderPaddleLeft } from '../Paddle/Paddle';\r\nimport renderBall from '../Ball/Ball';\r\nimport './Game.css';\r\nimport {\r\n  SPEED,\r\n  PADDLE_WIDTH,\r\n  PADDLE_HEIGHT,\r\n  BOT_LEVEL,\r\n  WINNER,\r\n} from '../../constants';\r\nimport { RED, GREEN, SELAGO } from '../../constants/colors';\r\n\r\nconst Game = () => {\r\n  const canvasRef = useRef(null);\r\n  const reqRef = useRef(null);\r\n  const defaultScore = {\r\n    computerScore: 0,\r\n    playerScore: 0,\r\n  };\r\n  const speed = SPEED;\r\n  const beatMe = BOT_LEVEL;\r\n  // most possbile ball bouncing back angle\r\n  const maxAngle = (75 / 180) * Math.PI;\r\n  const [score, setScore] = useState({ ...defaultScore });\r\n  const [restartGame, setRestartGame] = useState(false);\r\n  const animate = () => {\r\n    const canvas = canvasRef.current;\r\n    canvas.width = window.innerWidth / 2;\r\n    canvas.height = window.innerHeight / 2;\r\n    const ctx = canvas.getContext('2d');\r\n    const player = {\r\n      x: 0,\r\n      y: canvas.height / 2,\r\n      speed: SPEED,\r\n      width: PADDLE_WIDTH,\r\n      height: PADDLE_HEIGHT,\r\n    };\r\n    const computer = {\r\n      x: canvas.width - PADDLE_WIDTH,\r\n      y: canvas.height / 2,\r\n      speed: SPEED,\r\n      width: PADDLE_WIDTH,\r\n      height: PADDLE_HEIGHT,\r\n    };\r\n    const ball = {\r\n      x: canvas.width / 2,\r\n      y: canvas.height / 2,\r\n      vMax: speed,\r\n      vX: speed,\r\n      vY: -speed,\r\n      freeze: false,\r\n      radius: Math.round((canvas.height / 25 + Number.EPSILON) * 100) / 100,\r\n    };\r\n\r\n    const keys = {\r\n      ArrowUp: false,\r\n      ArrowDown: false,\r\n      Space: false,\r\n    };\r\n\r\n    const keyDown = (event) => {\r\n      if (event.code in keys) {\r\n        keys[event.code] = true;\r\n      }\r\n    };\r\n    const keyUp = (event) => {\r\n      if (event.code in keys) {\r\n        keys[event.code] = false;\r\n      }\r\n    };\r\n    const resetGame = () => {\r\n      ball.x = canvas.width / 2;\r\n      ball.y = canvas.height / 2;\r\n      ball.vMax = speed;\r\n      ball.vX = 0;\r\n      ball.vY = 0;\r\n      ball.freeze = true;\r\n      player.x = 0;\r\n      player.y = canvas.height / 2;\r\n      computer.x = canvas.width - PADDLE_WIDTH;\r\n      computer.y = canvas.height / 2;\r\n    };\r\n    const getWinner = () => {\r\n      const { playerScore, computerScore } = score;\r\n      if (playerScore === WINNER) return 'player';\r\n      if (computerScore === WINNER) return 'computer';\r\n      // if (score.player === 1)setGameEnd(true)\r\n      return false;\r\n    };\r\n\r\n    const restartBall = (currSpeed) => {\r\n      ball.freeze = false;\r\n      ball.vX = currSpeed / 2;\r\n      ball.vY = -currSpeed / 2;\r\n    };\r\n\r\n    const updateBallPos = () => {\r\n      ball.y += ball.vY;\r\n      ball.x += ball.vX;\r\n    };\r\n    const move = () => {\r\n      // Start a new game\r\n      if (keys.Space && ball.freeze && !getWinner()) {\r\n        restartBall(speed);\r\n      }\r\n      // player paddle position & limitation\r\n      if (keys.ArrowUp && player.y > player.height / 2) {\r\n        player.y -= player.speed;\r\n      } else if (\r\n        keys.ArrowDown &&\r\n        player.y < canvas.height - player.height / 2\r\n      ) {\r\n        player.y += player.speed;\r\n      }\r\n      // update ball position\r\n      updateBallPos(ball);\r\n      // computer speed up to the ball vertical position\r\n      // manipulated computer speed to catch the ball and\r\n      // to give the user a possibility to win\r\n      computer.speed = beatMe * (ball.y - computer.y);\r\n      // computer can't be faster than user\r\n      if (computer.speed < -speed) {\r\n        computer.speed = -speed;\r\n      }\r\n      if (computer.speed > speed) {\r\n        computer.speed = speed;\r\n      }\r\n      // computer paddle position\r\n      computer.y += computer.speed;\r\n      // computer paddle limitation\r\n      if (computer.y < computer.height / 2) {\r\n        computer.y = computer.height / 2;\r\n      }\r\n      if (computer.y > canvas.height - computer.height / 2) {\r\n        computer.y = canvas.height - computer.height / 2;\r\n      }\r\n      // ball collusion with borders\r\n      if (ball.y + ball.radius / 2 >= canvas.height) {\r\n        ball.vY *= -1;\r\n        ball.y = canvas.height - ball.radius / 2;\r\n      }\r\n      if (ball.y - ball.radius / 2 <= 0) {\r\n        ball.vY *= -1;\r\n        ball.y = ball.radius / 2;\r\n      }\r\n      if (ball.x + ball.radius / 2 >= canvas.width) {\r\n        ball.vX *= -1;\r\n        ball.x = canvas.width - ball.radius / 2;\r\n        setScore({ ...score, playerScore: (score.playerScore += 1) });\r\n        resetGame();\r\n      }\r\n      if (ball.x - ball.radius / 2 <= 0) {\r\n        ball.vX *= -1;\r\n        ball.x = ball.radius / 2;\r\n        setScore({ ...score, computerScore: (score.computerScore += 1) });\r\n        resetGame();\r\n      }\r\n      // ball collusion with paddles && bouncing back\r\n      // rather bouncing with a constant 45 degree\r\n      // bounce up to the range of ball to the paddle\r\n\r\n      if (\r\n        ball.x - ball.radius / 2 <= player.x + player.width &&\r\n        ball.y >= player.y - player.height / 2 &&\r\n        ball.y <= player.y + player.height / 2\r\n      ) {\r\n        const ballRange = (ball.y - player.y) / (player.height / 2);\r\n        const angle = ballRange * maxAngle;\r\n        ball.vX = ball.vMax * Math.cos(angle);\r\n        ball.vY = ball.vMax * Math.sin(angle);\r\n      }\r\n      if (\r\n        ball.x + ball.radius / 2 >= canvas.width - player.width &&\r\n        ball.y >= computer.y - computer.height / 2 &&\r\n        ball.y <= computer.y + computer.height / 2\r\n      ) {\r\n        const ballRange = (ball.y - computer.y) / (computer.height / 2);\r\n        const angle = ballRange * maxAngle;\r\n        ball.vX = -ball.vMax * Math.cos(angle);\r\n        ball.vY = ball.vMax * Math.sin(angle);\r\n      }\r\n    };\r\n\r\n    const draw = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      move();\r\n      ctx.fillStyle = SELAGO;\r\n      ctx.rect(0, 0, canvas.width, canvas.height);\r\n      ctx.fill();\r\n      ctx.beginPath();\r\n      renderPaddleLeft(ctx, player);\r\n      renderPaddleRight(ctx, computer);\r\n      renderBall(ctx, ball.radius, { x: ball.x, y: ball.y }, canvas);\r\n      //debug on canvas\r\n      //   let output = `BallR ${ball.radius} Player 1 X ${player.x} Y ${\r\n      //     player.y\r\n      //   } Player 2 X ${computer.x} Y ${\r\n      //     Math.round((computer.y + Number.EPSILON) * 100) / 100\r\n      //   } VComp ${Math.round((computer.speed + Number.EPSILON) * 100) / 100}`;\r\n\r\n      ctx.font = '14px Arial';\r\n      ctx.textAlign = 'center';\r\n      if (getWinner()) {\r\n        document.removeEventListener('keydown', keyDown);\r\n        document.removeEventListener('keyup', keyUp);\r\n        if (getWinner() === 'player') {\r\n          ctx.fillStyle = GREEN;\r\n          ctx.fillText('YOU WIN !', canvas.width / 2, 30);\r\n        }\r\n        if (getWinner() === 'computer') {\r\n          ctx.fillStyle = RED;\r\n          ctx.fillText('GAME OVER !', canvas.width / 2, 30);\r\n        }\r\n      }\r\n      requestAnimationFrame(draw);\r\n    };\r\n\r\n    document.addEventListener('keydown', keyDown);\r\n    document.addEventListener('keyup', keyUp);\r\n    draw();\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setScore({ ...defaultScore });\r\n    setRestartGame(!restartGame);\r\n  };\r\n\r\n  useEffect(() => {\r\n    reqRef.current = requestAnimationFrame(animate);\r\n    return () => cancelAnimationFrame(reqRef.current);\r\n  }, [restartGame]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const { playerScore, computerScore } = score;\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <span className=\"score\">\r\n          Player: {playerScore} | Computer: {computerScore}\r\n        </span>\r\n        <span className=\"controls\">\r\n          Use [↑][↓] to MOVE\r\n          <br />\r\n          Use [SPACE] to START\r\n        </span>\r\n      </>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={window.innerWidth / 2}\r\n        height={window.innerHeight / 2}\r\n        aria-label=\"Ping Pong Game\"\r\n        aria-roledescription=\"2d game context\"\r\n      />\r\n      {playerScore === WINNER || computerScore === WINNER ? (\r\n        <button type=\"button\" className=\"button\" onClick={handleRestart}>\r\n          Play again\r\n        </button>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import { PADDLE_HEIGHT, PADDLE_WIDTH } from '../../constants';\r\nimport {\r\n  ROYAL_BLUE,\r\n  TROPICAL_BLUE,\r\n  RED,\r\n  CAVERN_PINK,\r\n} from '../../constants/colors.js';\r\n\r\nexport const renderPaddleLeft = (context, position) => {\r\n  const gradient = context.createLinearGradient(0, 100, 150, 150);\r\n  gradient.addColorStop(0, TROPICAL_BLUE);\r\n  gradient.addColorStop(1, ROYAL_BLUE);\r\n  context.save();\r\n  context.fillStyle = gradient;\r\n  context.beginPath();\r\n  context.rect(\r\n    position.x,\r\n    position.y - PADDLE_HEIGHT / 2,\r\n    PADDLE_WIDTH,\r\n    PADDLE_HEIGHT\r\n  );\r\n  context.fill();\r\n  context.restore();\r\n};\r\nexport const renderPaddleRight = (context, position) => {\r\n  const gradient = context.createLinearGradient(500, 50, 650, 375);\r\n  gradient.addColorStop(0, CAVERN_PINK);\r\n  gradient.addColorStop(1, RED);\r\n  context.save();\r\n  context.fillStyle = gradient;\r\n  context.beginPath();\r\n  context.rect(\r\n    position.x,\r\n    position.y - PADDLE_HEIGHT / 2,\r\n    PADDLE_WIDTH,\r\n    PADDLE_HEIGHT\r\n  );\r\n  context.fill();\r\n  context.restore();\r\n};\r\n","import './App.css';\nimport Game from './components/Game/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <>\n        <Game />\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}